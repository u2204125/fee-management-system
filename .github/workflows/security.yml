name: Security Scan

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate
          npm audit fix --dry-run

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium

      - name: Check for sensitive files
        run: |
          echo "Checking for sensitive files..."
          
          # Check for accidentally committed sensitive files
          if find . -name "*.env" -not -path "./node_modules/*" -not -name ".env.example" | grep -q .; then
            echo "❌ Found .env files that shouldn't be committed"
            find . -name "*.env" -not -path "./node_modules/*" -not -name ".env.example"
            exit 1
          fi
          
          if find . -name "*.pem" -not -path "./node_modules/*" | grep -q .; then
            echo "❌ Found .pem files that shouldn't be committed"
            exit 1
          fi
          
          if find . -name "*.key" -not -path "./node_modules/*" | grep -q .; then
            echo "❌ Found .key files that shouldn't be committed"
            exit 1
          fi
          
          echo "✓ No sensitive files found"

      - name: Check for hardcoded secrets
        run: |
          echo "Checking for hardcoded secrets..."
          
          # Check for potential hardcoded secrets (basic patterns)
          if grep -r "password.*=.*[\"'].*[\"']" --include="*.js" --include="*.json" --exclude-dir=node_modules .; then
            echo "⚠️ Potential hardcoded passwords found"
          fi
          
          if grep -r "api[_-]?key.*=.*[\"'].*[\"']" --include="*.js" --include="*.json" --exclude-dir=node_modules . | grep -v "your_api_key_here\|example\|placeholder"; then
            echo "⚠️ Potential hardcoded API keys found"
          fi
          
          if grep -r "secret.*=.*[\"'].*[\"']" --include="*.js" --include="*.json" --exclude-dir=node_modules . | grep -v "your_secret_here\|example\|placeholder"; then
            echo "⚠️ Potential hardcoded secrets found"
          fi
          
          echo "Security scan completed"

  dependency-vulnerability:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for known vulnerabilities
        run: |
          # Generate detailed audit report
          npm audit --json > audit-report.json || true
          
          # Check if there are any high or critical vulnerabilities
          HIGH_VULNS=$(cat audit-report.json | jq '.metadata.vulnerabilities.high // 0')
          CRITICAL_VULNS=$(cat audit-report.json | jq '.metadata.vulnerabilities.critical // 0')
          
          echo "High vulnerabilities: $HIGH_VULNS"
          echo "Critical vulnerabilities: $CRITICAL_VULNS"
          
          if [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "❌ Critical vulnerabilities found!"
            npm audit
            exit 1
          elif [ "$HIGH_VULNS" -gt 0 ]; then
            echo "⚠️ High vulnerabilities found!"
            npm audit
            # Don't fail the build for high vulns, but warn
          else
            echo "✓ No critical or high vulnerabilities found"
          fi
